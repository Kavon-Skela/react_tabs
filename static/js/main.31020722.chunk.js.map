{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTab","find","tab","id","className","map","isActive","cn","href","onClick","title","content","App","useState","selectedTab","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAkB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAC/CC,EAAaH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,MAAkBD,EAAK,GAExE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GACT,IAAMI,EAAWJ,EAAIC,KAAOH,EAAWG,GAEvC,OACE,oBACEC,UAAWG,IAAG,CACZ,YAAaD,IAEf,UAAQ,MAJV,SAOE,mBACEE,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,WACFH,GACHP,EAAcG,IALpB,SASGA,EAAIQ,SAXFR,EAAIC,WAmBnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAWW,cCvCPd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAwCC,mBAAShB,EAAK,IAAtD,mBAAOiB,EAAP,KAAoBC,EAApB,KAMA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,EAAYJ,SAElC,cAAC,EAAD,CACEb,KAAMA,EACNE,cAXqB,SAACG,GAC1Ba,EAAiBb,IAWbJ,cAAegB,EAAYX,SCzBnCa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.31020722.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n}\n\nexport const Tabs: FC<Props> = ({ tabs, selectedTabId, onTabSelected }) => {\n  const currentTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const isActive = tab.id === currentTab.id;\n\n            return (\n              <li\n                className={cn({\n                  'is-active': isActive,\n                })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (!isActive) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTabId] = useState(tabs[0]);\n\n  const handleTabSelection = (tab: Tab) => {\n    setSelectedTabId(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        onTabSelected={handleTabSelection}\n        selectedTabId={selectedTab.id}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}